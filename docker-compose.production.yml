version: '3.8'

services:
  # ===================================
  # JAPM API Service (Producción)
  # ===================================
  japm-api:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: japm-api-prod
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_URL=mysql://japm_user:japm_password_secure@mysql:3306/japm
      - JWT_SECRET=production_super_secure_jwt_secret_change_me
      - DEFAULT_LANGUAGE_CODE=es-ES
      - DEFAULT_TIMEZONE=America/Mexico_City
      - LOG_LEVEL=info
      - AUTO_SEED=false
      - SKIP_SEED=true
      - HEALTH_CHECK_ENABLED=true
      - HEALTH_CHECK_PATH=/health
      - TENANCY_ENABLED=false
      - TENANCY_LOGIN=tenant_admin@example.com
      - TENANCY_PASSWORD=Password123
    volumes:
      - uploads_data:/app/uploads
      - logs_data:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - japm-production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # ===================================
  # MySQL Database (Producción)
  # ===================================
  mysql:
    image: mysql:8.0
    container_name: japm-mysql-prod
    environment:
      MYSQL_ROOT_PASSWORD: root_password_very_secure_change_me
      MYSQL_DATABASE: japm
      MYSQL_USER: japm_user
      MYSQL_PASSWORD: japm_password_secure
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - japm-production
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --max_connections=200
      --innodb_buffer_pool_size=1G
      --sql_mode=STRICT_TRANS_TABLES,NO_ZERO_DATE,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "japm_user", "-pjapm_password_secure"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  # ===================================
  # Redis Cache (Producción)
  # ===================================
  redis:
    image: redis:7-alpine
    container_name: japm-redis-prod
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    restart: unless-stopped
    networks:
      - japm-production
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # ===================================
  # Nginx Reverse Proxy (Opcional)
  # ===================================
  nginx:
    image: nginx:alpine
    container_name: japm-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - japm-api
    restart: unless-stopped
    networks:
      - japm-production
    profiles:
      - nginx

  # ===================================
  # Monitoring (Opcional)
  # ===================================
  prometheus:
    image: prom/prometheus:latest
    container_name: japm-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    restart: unless-stopped
    networks:
      - japm-production
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: japm-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin_password_change_me
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - japm-production
    profiles:
      - monitoring

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  uploads_data:
    driver: local
  logs_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  japm-production:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16 