# ===============================================
# JAPM (Just Another Prompt Manager)
# Archivo de Configuración de Variables de Entorno
# ===============================================

# ================================
# CONFIGURACIÓN DE BASE DE DATOS
# ================================

# Elige UNA de las siguientes opciones según tu base de datos:

# SQLite (Desarrollo - ACTUAL)
DATABASE_URL="file:./prisma/japm.db"

# MySQL (Producción)
# DATABASE_URL="mysql://japm_user:tu_password_seguro@localhost:3306/japm"
# DATABASE_URL="mysql://japm_user:tu_password_seguro@localhost:3306/japm?ssl=true"

# PostgreSQL (Recomendado para Producción)
# DATABASE_URL="postgresql://japm_user:tu_password_seguro@localhost:5432/japm"
# DATABASE_URL="postgresql://japm_user:tu_password_seguro@localhost:5432/japm?sslmode=require"
# DATABASE_URL="postgresql://japm_user:tu_password_seguro@localhost:5432/japm?connection_limit=20&pool_timeout=20"

# Para servicios en la nube:
# DATABASE_URL="postgresql://user:pass@host.railway.app:port/dbname"
# DATABASE_URL="mysql://user:pass@host.planetscale.com:port/dbname?sslaccept=strict"

# ================================
# CONFIGURACIÓN DE LA APLICACIÓN
# ================================

# Puerto del servidor (por defecto: 3001)
PORT=3001

# Entorno de ejecución
NODE_ENV=development

# URL base de la aplicación (para producción)
APP_URL=http://localhost:3001

# ================================
# CONFIGURACIÓN DE AUTENTICACIÓN
# ================================

# JWT Secret (CAMBIAR EN PRODUCCIÓN - usar un string aleatorio largo)
JWT_SECRET=tu_jwt_secret_muy_muy_seguro_cambiame_en_produccion

# JWT Token Expiration
JWT_EXPIRES_IN=24h

# Refresh Token Expiration
JWT_REFRESH_EXPIRES_IN=7d

# ================================
# CONFIGURACIÓN DE AI MODELS
# ================================

# OpenAI API Key
OPENAI_API_KEY=sk-tu_openai_api_key_aqui

# Anthropic API Key (Claude)
ANTHROPIC_API_KEY=tu_anthropic_api_key_aqui

# Azure OpenAI (opcional)
# AZURE_OPENAI_API_KEY=tu_azure_openai_key
# AZURE_OPENAI_ENDPOINT=https://tu-recurso.openai.azure.com/
# AZURE_OPENAI_API_VERSION=2024-02-15-preview

# Google AI (opcional)
# GOOGLE_AI_API_KEY=tu_google_ai_key

# ================================
# CONFIGURACIÓN DE LOGGING
# ================================

# Log Level (error, warn, info, debug)
LOG_LEVEL=debug

# Habilitar logs de Prisma (development only)
DEBUG=prisma:query,prisma:info,prisma:warn

# Log File Path (opcional)
# LOG_FILE_PATH=./logs/app.log

# ================================
# CONFIGURACIÓN DE STRUCTURED LOGGING
# ================================

# Enable structured logging (true/false)
STRUCTURED_LOGGING_ENABLED=true

# Structured logging format (json, text)
STRUCTURED_LOGGING_FORMAT=json

# Log sensitive data in development (false recommended for security)
LOG_SENSITIVE_DATA=false

# ================================
# CONFIGURACIÓN DE AUDIT LOGGING
# ================================

# Enable audit logging (true/false) 
AUDIT_LOGGING_ENABLED=true

# Audit log level (info, warn, error)
AUDIT_LOG_LEVEL=info

# Log failed operations only (false logs all operations)
AUDIT_LOG_FAILURES_ONLY=false

# Include request/response bodies in audit logs (be careful with sensitive data)
AUDIT_INCLUDE_BODIES=false

# Audit log retention days (for log rotation)
AUDIT_LOG_RETENTION_DAYS=90

# ================================
# CONFIGURACIÓN REGIONAL
# ================================

# Idioma por defecto del sistema
DEFAULT_LANGUAGE_CODE=es-ES

# Zona horaria por defecto
DEFAULT_TIMEZONE=America/Mexico_City

# ================================
# CONFIGURACIÓN DE CACHE
# ================================

# Cache TTL en segundos (5 minutos = 300)
CACHE_TTL=300

# Redis URL (opcional - para cache distribuido)
# REDIS_URL=redis://localhost:6379

# ================================
# CONFIGURACIÓN DE EMAIL
# ================================

# SMTP Configuration (opcional)
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=tu-email@gmail.com
# SMTP_PASS=tu-password-de-app
# SMTP_FROM=noreply@tu-dominio.com

# ================================
# CONFIGURACIÓN DE ARCHIVOS
# ================================

# Tamaño máximo de archivo en bytes (10MB)
MAX_FILE_SIZE=10485760

# Directorio de uploads
UPLOAD_DIR=./uploads

# ================================
# CONFIGURACIÓN DE CORS
# ================================

# Orígenes permitidos (separados por coma)
CORS_ORIGINS=http://localhost:3000,http://localhost:3001

# ================================
# CONFIGURACIÓN DE RATE LIMITING / THROTTLING
# ================================

# Rate Limiting General (requests por minuto por IP)
THROTTLE_TTL=60                    # TTL en segundos (ventana de tiempo)
THROTTLE_LIMIT=500                 # Máximo requests en la ventana

# Rate Limiting para Autenticación (más restrictivo)
THROTTLE_AUTH_TTL=900              # 15 minutos
THROTTLE_AUTH_LIMIT=20             # 20 intentos de login por IP

# Rate Limiting para APIs de consulta
THROTTLE_API_TTL=60                # 1 minuto  
THROTTLE_API_LIMIT=300             # 300 requests por minuto

# Rate Limiting para operaciones de creación (más restrictivo)
THROTTLE_CREATION_TTL=60           # 1 minuto
THROTTLE_CREATION_LIMIT=100        # 100 creaciones por minuto

# Rate Limiting para LLM/AI operations (muy restrictivo por costo)
THROTTLE_LLM_TTL=60                # 1 minuto
THROTTLE_LLM_LIMIT=50              # 50 requests AI por minuto

# Habilitar rate limiting en producción
THROTTLE_ENABLED=true

# Forzar rate limiting en desarrollo (por defecto se deshabilita en dev)
# THROTTLE_FORCE_IN_DEV=true

# Skip rate limiting para IPs específicas (separadas por coma)
# THROTTLE_SKIP_IPS=127.0.0.1,::1

# ================================
# CONFIGURACIÓN DE WEBHOOKS
# ================================

# Webhook Secret para validar requests
# WEBHOOK_SECRET=tu_webhook_secret

# ================================
# CONFIGURACIÓN DE MONITOREO
# ================================

# Sentry DSN (opcional - para error tracking)
# SENTRY_DSN=https://tu-sentry-dsn@sentry.io/proyecto

# New Relic License Key (opcional)
# NEW_RELIC_LICENSE_KEY=tu_new_relic_key

# ================================
# CONFIGURACIÓN DE DESARROLLO
# ================================

# Habilitar Swagger en producción (false recomendado)
ENABLE_SWAGGER=true

# Seed automático en desarrollo
AUTO_SEED=true

# Hot reload en desarrollo
HOT_RELOAD=true

# ================================
# CONFIGURACIÓN DE PRODUCCIÓN
# ================================

# SSL Certificate paths (para HTTPS)
# SSL_CERT_PATH=/path/to/cert.pem
# SSL_KEY_PATH=/path/to/private-key.pem

# Database Connection Pool Settings
# DB_POOL_MIN=5
# DB_POOL_MAX=20
# DB_POOL_ACQUIRE_TIMEOUT=60000

# Health Check Configuration
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_PATH=/health

# ================================
# NOTAS DE CONFIGURACIÓN
# ================================

# 1. Para SQLite (desarrollo):
#    - No necesitas instalar ningún servidor de BD
#    - Los datos se guardan en ./prisma/japm.db
#    
# 2. Para MySQL (producción):
#    - Instala MySQL Server
#    - Crea una base de datos llamada 'japm'
#    - Configura el usuario y password
#
# 3. Para PostgreSQL (recomendado):
#    - Instala PostgreSQL
#    - Crea una base de datos llamada 'japm'
#    - Configura el usuario y password
#
# 4. Migración entre bases de datos:
#    - Usa el script: ./scripts/migrate_db.sh [sqlite|mysql|postgresql]
#
# 5. Seguridad:
#    - Cambia JWT_SECRET en producción
#    - Usa conexiones SSL en producción
#    - No expongas las API keys en logs
#
# 6. Para más información consulta: docs/DATABASE.md 